{"version":3,"sources":["webpack://capstone-travel-app/webpack/runtime/load script","webpack://capstone-travel-app/webpack/runtime/css loading","webpack://capstone-travel-app/./node_modules/lit-html/lib/directive.js","webpack://capstone-travel-app/./node_modules/lit-html/lib/dom.js","webpack://capstone-travel-app/./node_modules/lit-html/lib/part.js","webpack://capstone-travel-app/./node_modules/lit-html/lib/template.js","webpack://capstone-travel-app/./node_modules/lit-html/lib/template-instance.js","webpack://capstone-travel-app/./node_modules/lit-html/lib/template-result.js","webpack://capstone-travel-app/./node_modules/lit-html/lib/parts.js","webpack://capstone-travel-app/./node_modules/lit-html/lib/default-template-processor.js","webpack://capstone-travel-app/./node_modules/lit-html/lib/template-factory.js","webpack://capstone-travel-app/./node_modules/lit-html/lib/render.js","webpack://capstone-travel-app/./node_modules/lit-html/lit-html.js","webpack://capstone-travel-app/./src/client/ts/pageLoader.ts","webpack://capstone-travel-app/webpack/bootstrap","webpack://capstone-travel-app/webpack/runtime/define property getters","webpack://capstone-travel-app/webpack/runtime/ensure chunk","webpack://capstone-travel-app/webpack/runtime/get javascript chunk filename","webpack://capstone-travel-app/webpack/runtime/get mini-css chunk filename","webpack://capstone-travel-app/webpack/runtime/hasOwnProperty shorthand","webpack://capstone-travel-app/webpack/runtime/make namespace object","webpack://capstone-travel-app/webpack/runtime/publicPath","webpack://capstone-travel-app/webpack/runtime/jsonp chunk loading","webpack://capstone-travel-app/./src/client/index.ts"],"names":["inProgress","dataWebpackPrefix","loadStylesheet","installedCssChunks","directives","WeakMap","isDirective","o","has","isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","noChange","nothing","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","value","getHTML","innerHTML","isPrimitive","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","v","text","t","setAttribute","_getValue","committer","directive","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","call","prefix","templateCache","templateCaches","get","stringsArray","keyString","Map","set","key","join","getTemplateElement","render","firstChild","Object","assign","appendInto","loader","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","m","d","definition","defineProperty","enumerable","f","chunkId","Promise","all","keys","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","url","done","script","needAttach","scripts","getElementsByTagName","charset","timeout","nc","src","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","forEach","fn","setTimeout","bind","target","head","r","toStringTag","p","resolve","reject","href","fullhref","existingLinkTags","dataHref","tag","rel","existingStyleTags","findStylesheet","linkTag","errorType","realHref","err","code","request","createStylesheet","179","miniCss","then","installedChunks","j","installedChunkData","promise","error","realSrc","message","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","resolves","shift","chunkLoadingGlobal","self","paths","basePath","location","pathname","console","log","path","main","querySelector","navbar","loadPage","navItems","querySelectorAll","classList","add","remove","setActiveNav","it","init","composedPath","filter","HTMLLIElement","link","history","pushState","onpopstate"],"mappings":"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","file":"main-bundle.js","sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"capstone-travel-app:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","var createStylesheet = (chunkId, fullhref, resolve, reject) => {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = (event) => {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = (href, fullhref) => {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = (chunkId) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.miniCss = (chunkId, promises) => {\n\tvar cssChunks = {\"283\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(() => {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, (e) => {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","import { html, TemplateResult } from 'lit-html'\n\nexport function loader(): TemplateResult {\n    return html`<div class=\"loader\"></div>`\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \"-bundle.js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".css\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => {\n\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n\t\t\t\t\t});\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no deferred startup\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcapstone_travel_app\"] = self[\"webpackChunkcapstone_travel_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n\n// no deferred startup","import { render } from 'lit-html'\nimport { loader } from './ts/pageLoader'\nconst home = () => import('./ts/home')\nconst bestPlaces = () => import('./ts/bestPlaces')\nconst savedPlaces = () => import('./ts/savedPlaces')\nconst basePath = (() => {\n    let paths = window.location.pathname.split('/')\n    paths.pop()\n    return paths.join('/')\n})()\n\nconsole.log(basePath)\n\nimport './styles/base.scss'\nimport './styles/header.scss'\nimport './styles/loader.scss'\n\nlet path: string = window.location.pathname\n\nconst main = document.querySelector('main')!\nconst navbar = document.querySelector('nav')\n\nfunction setActiveNav() {\n    const navItems = navbar?.querySelectorAll('.nav-item')!\n    for (let i = 0; i < navItems.length; i++) {\n        basePath + navItems[i].getAttribute('href') === path\n            ? navItems[i].classList.add('active')\n            : navItems[i].classList.remove('active')\n    }\n}\n\nfunction loadPage() {\n    render(loader(), main)\n    path = window.location.pathname\n    setActiveNav()\n    if (path.endsWith('/best-places'))\n        return bestPlaces().then((it) => render(it.init(), main))\n    if (path.endsWith('/saved-places'))\n        return savedPlaces().then((it) => render(it.init(), main))\n    home().then((it) => it.init())\n}\n\nfunction movePage(link: string) {\n    if (path !== link || path === '/') {\n        history.pushState({}, link.substr(1), basePath + link)\n        loadPage()\n    }\n}\n\nnavbar!.addEventListener('click', (e: MouseEvent) => {\n    e.composedPath()\n        .filter((it) => it instanceof HTMLLIElement)\n        .forEach((it: HTMLLIElement) => movePage(it.getAttribute('href')!))\n})\n\nwindow.onpopstate = loadPage\nloadPage()\n"],"sourceRoot":""}